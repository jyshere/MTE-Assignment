20. Count all numbers with unique digits for a given number of digits. Write its algorithm, 
program. Find its time and space complexities. Explain with suitable example. 

Algorithm:-
If n == 0, return 1 (only number is 0).
For n > 0, initialize:
total = 10 (all 1-digit numbers: 0–9)
For 2 to n, calculate:
For i = 2 to n:
First digit: 9 options (1–9)
Next digits: 9, 8, ..., 10 - i choices (no repetition)
Multiply to get the count for each i-digit number and add to total
Return total

Program:-
int countNumbersWithUniqueDigits(int n) {
    if (n == 0) return 1;
    if (n > 10) n = 10; 

    int total = 10;
    int uniqueDigits = 9;
    int available = 9;

    for (int i = 2; i <= n; i++) {
        uniqueDigits = uniqueDigits * available;
        total += uniqueDigits;
        available--;
    }

    return total;
}

Time Complexity: O(n)
Space Complexity: O(1)
